#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NUM_L 1
#define NAV_L 2
#define FUN_L 3
#define MISCL 4

&lt { quick_tap_ms = <200>; };

/ {
    
    tap_dances {
    	shifty: shift_caps_word {
		    compatible = "zmk,behavior-tap-dance";
		    label = "TD_SHIFTY";
		    #binding-cells = <0>;
		    tapping-term-ms = <150>;
		    bindings = <&kp LSHFT>, <&caps_word>;
	    };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RET>;
        };
    };

    behaviors {
        brm: bottom_row_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    cond_layers {
      compatible = "zmk,conditional-layers";
	    tri {
	      if-layers = <NUM_L NAV_L>;
	      then-layer = <FUN_L>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            label = "base";
            bindings = <
                &kp Q       &kp W       &kp E       &kp R &kp T     &kp Y &kp U &kp I           &kp O         &kp P
                &kp A       &kp S       &kp D       &kp F &kp G     &kp H &kp J &kp K           &kp L         &kp SQT
                &brm LGUI Z &brm LCTL X &brm LALT C &kp V &kp B     &kp N &kp M &brm LALT COMMA &brm LCTL DOT &brm LGUI SEMI
                                  &lt MISCL TAB &lt NUM_L SPACE     &lt NAV_L BKSP &shifty
            >;
        };
        
        num_layer { // Number layer
            label = "num";
            bindings = <
                &kp N1      &kp N2   &kp N3      &kp N4    &kp N5    &kp N6   &kp N7    &kp N8    &kp N9    &kp N0
                &kp PSCRN   &none    &kp PLUS    &kp UNDER &kp LBKT  &kp RBKT &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT
                &kp GRAVE   &kp LCTL &kp LALT   &kp PIPE   &kp LBRC  &kp RBRC &kp BSLH  &trans    &trans    &kp SLASH
                                                 &trans    &trans    &trans   &trans
            >;
        };

        nav_layer { // Navigation and symbol layer
          label = "nav";
          bindings = <
            &kp EXCL   &kp AT   &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET &kp AMPS   &kp STAR  &kp LPAR   &kp RPAR
            &none      &kp HOME &kp PG_UP &kp PG_DN &kp END    &kp LARW  &kp DARW   &kp UARW  &kp RARW  &none
            &kp TILDE  &none    &none     &none     &none      &trans    &kp PIPE   &kp LT    &kp GT     &kp QMARK
                                                 &trans    &kp DEL    &trans   &trans
          >;
        };

        func_layer { // Function layer
          label = "fun";
          bindings = <
            &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
            &trans  &trans  &trans  &trans  &kp F11 &kp F12 &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &kp F13 &kp F14 &trans  &trans  &trans  &studio_unlock
                                    &trans  &trans  &trans  &trans
          >;
        };

        misc_layer { // misc layer
          label = "misc";
          bindings = <
            &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)   &kp LC(N5)   &kp LC(N6)     &kp LC(N7)   &kp LC(N8)  &kp LC(N9)  &kp LC(N0)
            &trans  &trans  &trans  &trans  &trans &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &trans  &trans  &trans &trans  &trans  &trans  &trans  &studio_unlock
                                    &trans  &trans &trans  &trans
          >;
        };
    };
 };
